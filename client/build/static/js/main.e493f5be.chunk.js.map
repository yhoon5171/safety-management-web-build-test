{"version":3,"sources":["../node_modules/truffle-contract/node_modules/web3-eth-accounts/src sync","../node_modules/truffle-interface-adapter/node_modules/web3-eth-accounts/src sync","components/FileUpload.js","App.jsx","index.js"],"names":["webpackEmptyContext","req","e","Error","code","keys","resolve","module","exports","id","ipfs","ipfsHttpClient","FileUpload","setUrl","setIpfs","useState","file","setFile","fileUrl","setFileUrl","loading","setLoading","uploaded","setUploaded","uploadFile","preventDefault","add","added","url","path","console","log","Form","onSubmit","Control","required","type","onChange","target","value","files","preUpload","className","name","Container","ProgressBar","animated","now","Badge","pill","size","href","rel","Button","fileAndUploadButton","App","web3","setWeb3","account","setAccount","transactionInstance","setTransactionInstance","category","setCategory","setName","ipfsHash","setIpfsHash","registrant","setRegsitrant","responsibleManager","setResponsibleManager","fileType","setFileType","fileDescription","setFileDescription","setTransactionCnt","time","setTime","ipfsHash_","setIpfsHash_","category_","setCategory_","name_","setName_","registrant_","setRegsitrant_","responsibleManager_","setResponsibleManager_","fileType_","setFileType_","fileDescription_","setFileDescription_","useEffect","Web3","providers","HttpProvider","contract","require","transaction","TransactionContract","setProvider","currentProvider","eth","getAccounts","error","accounts","deployed","then","instance","componentWillMount","getPastEvents","fromBlock","toBlock","events","i","length","time_","moment","unix","returnValues","toString","ipfs_hash","responsible_manager","file_type","file_description","cntTransactions","updateAllTransactions","sendTransaction","sendTrans","from","gas","transactionHash","placeholder","event","onClick","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.e493f5be.chunk.js","sourcesContent":["function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 1049;","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 1111;","import React, { useState } from 'react'\r\nimport { Form, Button, Badge, ProgressBar, Container } from 'react-bootstrap'\r\nimport { create as ipfsHttpClient } from 'ipfs-http-client'\r\nconst ipfs = ipfsHttpClient('https://ipfs.infura.io:5001/api/v0')\r\n\r\nexport const FileUpload = ({ setUrl, setIpfs }) => {\r\n    const [file, setFile] = useState({})\r\n    const [fileUrl, setFileUrl] = useState('')\r\n    const [loading, setLoading] = useState(false)\r\n    const [uploaded, setUploaded] = useState(false)\r\n\r\n    const uploadFile = async (e) => {\r\n        setLoading(true)\r\n        e.preventDefault()\r\n\r\n        try {\r\n            const added = await ipfs.add(file)\r\n            const url = `https://ipfs.infura.io/ipfs/${added.path}`\r\n            setUrl(url)\r\n            setFileUrl(url)\r\n            setUploaded(true)\r\n            setIpfs(added.path)\r\n        } catch (err) {\r\n            console.log('Error uploading the file : ', err)\r\n        }\r\n        setLoading(false)\r\n    }\r\n\r\n    const preUpload = (e) => {\r\n        if (e.target.value !== '') {\r\n            setFile(e.target.files[0])\r\n        } else {\r\n            setFile({})\r\n        }\r\n    }\r\n\r\n    const fileAndUploadButton = () => {\r\n        if (file.name) {\r\n            if (!loading) {\r\n                return (\r\n                    <div>\r\n                        <h5>\r\n                            {file.name} <Badge pill>{file.size} kb</Badge>\r\n                        </h5>\r\n\r\n                        {uploaded ? (\r\n                            <h5>\r\n                                ✅{' '}\r\n                                <a\r\n                                    href={fileUrl}\r\n                                    target='_blank'\r\n                                    rel='noopener noreferrer'\r\n                                >\r\n                                    File\r\n                                </a>{' '}\r\n                                Uploaded Successfully ✅\r\n                            </h5>\r\n                        ) : (\r\n                            <Button type='submit'>Upload File</Button>\r\n                        )}\r\n                    </div>\r\n                )\r\n            } else {\r\n                return (\r\n                    <Container>\r\n                        <h4>Uploading File</h4>\r\n                        <ProgressBar animated now={100} />\r\n                        <h4>Please Wait ...</h4>\r\n                    </Container>\r\n                )\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Form onSubmit={uploadFile}>\r\n                <Form.Control\r\n                    required\r\n                    type='file'\r\n                    onChange={(e) => preUpload(e)}\r\n                    className='mb-3'\r\n                />\r\n\r\n                {fileAndUploadButton()}\r\n            </Form>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport {FileUpload} from './components/FileUpload';\r\nimport \"./App.css\";\r\nimport TransactionContract from \"../src/contracts/Transaction.json\"\r\nimport Web3 from 'web3';\r\nimport moment from \"moment\";\r\n\r\n\r\nexport default function App() {\r\n  const [fileUrl, setFileUrl] = useState(\"\");\r\n  const [web3, setWeb3] = useState(\"\");\r\n  const [account, setAccount] = useState(\"\");\r\n  const [transactionInstance, setTransactionInstance] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const [category, setCategory] = useState(\"\");\r\n  const [name, setName] = useState(\"\");\r\n  const [ipfsHash, setIpfsHash] = useState(\"\");\r\n  const [registrant, setRegsitrant] = useState(\"\");\r\n  const [responsibleManager, setResponsibleManager] = useState(\"\");\r\n  const [fileType, setFileType] = useState(\"\");\r\n  const [fileDescription, setFileDescription] = useState(\"\");\r\n  const [transactionCnt, setTransactionCnt] = useState(\"\");\r\n\r\n  const [time, setTime] = useState(\"\");\r\n  const [ipfsHash_, setIpfsHash_] = useState(\"\");\r\n  const [category_, setCategory_] = useState(\"\");\r\n  const [name_, setName_] = useState(\"\");\r\n  const [registrant_, setRegsitrant_] = useState(\"\");\r\n  const [responsibleManager_, setResponsibleManager_] = useState(\"\");\r\n  const [fileType_, setFileType_] = useState(\"\");\r\n  const [fileDescription_, setFileDescription_] = useState(\"\");\r\n\r\n\r\n\r\n  \r\n\r\n  useEffect(() => {\r\n    async function componentWillMount(e) {\r\n      //const web3 = new Web3(new Web3.providers.HttpProvider('http://localhost:8545'));\r\n      const web3 = new Web3(new Web3.providers.HttpProvider('http://ec2-54-180-152-10.ap-northeast-2.compute.amazonaws.com:8545'));\r\n      setWeb3(web3);\r\n      console.log(web3)\r\n      const contract = require(\"truffle-contract\");\r\n      const transaction = contract(TransactionContract);\r\n      console.log(web3);\r\n      transaction.setProvider(web3.currentProvider);\r\n  \r\n      web3.eth.getAccounts((error, accounts) => {\r\n        if (!error){\r\n          transaction.deployed().then(instance => {\r\n            setTransactionInstance(instance);\r\n            setAccount(accounts[0]);\r\n            setLoading(true);\r\n          })\r\n        }\r\n      })\r\n      \r\n    }\r\n\r\n    componentWillMount();\r\n    // setTimeout(() => {  console.log(\"World!\"); }, 1000);\r\n    // updateAllTransactions();\r\n\r\n    \r\n\r\n  }, []);\r\n\r\n\r\n  useEffect(() => {\r\n\r\n    async function updateAllTransactions(e){\r\n      let events = await transactionInstance.getPastEvents('handleTransaction', {fromBlock:0, toBlock:'latest'});\r\n      for(let i=0; i<events.length; i+=1){\r\n        const record = {};\r\n        var time_ = moment.unix(events[i].returnValues.time);\r\n\r\n        setCategory_(events[i].returnValues.category.toString());\r\n        setName_(events[i].returnValues.name.toString());\r\n        setTime(time_.toString());\r\n        setIpfsHash_(events[i].returnValues.ipfs_hash.toString());\r\n        setRegsitrant_(events[i].returnValues.registrant.toString());\r\n        setResponsibleManager_(events[i].returnValues.responsible_manager.toString());\r\n        setFileType_(events[i].returnValues.file_type.toString());\r\n        setFileDescription_(events[i].returnValues.file_description.toString());\r\n        setTransactionCnt(transactionInstance.cntTransactions());\r\n  \r\n      }\r\n      console.log(events.length);\r\n      console.log(events);\r\n  \r\n    }\r\n\r\n    if (loading == true) updateAllTransactions();\r\n\r\n}, [loading]);\r\n\r\n\r\n  const sendTransaction = async (e) => {\r\n    console.log(web3);\r\n    console.log(account);\r\n    console.log(transactionInstance);\r\n    await transactionInstance.sendTrans(category, name, ipfsHash, registrant, responsibleManager, fileType, fileDescription,{\r\n      from: account,\r\n      //value: e.web3.utils.toWei('10', \"ether\"),\r\n      gas: 1000000\r\n    })\r\n    \r\n    let events = await transactionInstance.getPastEvents('handleTransaction', {fromBlock: 0, toBlock:'latest'});\r\n    console.log(events[events.length-1].transactionHash)\r\n  }\r\n\r\n\r\n\r\n\r\n  return (\r\n    <div>\r\n      <input type=\"text\" placeholder=\"Type\" onChange = {(event) => setCategory(event.target.value)}></input>\r\n      <br></br>\r\n      <input type=\"text\" placeholder=\"Name\" onChange = {(event) => setName(event.target.value)}></input>\r\n      <br></br>\r\n      <input type=\"text\" placeholder=\"Registrant\" onChange = {(event) => setRegsitrant(event.target.value)}></input>\r\n      <br></br>\r\n      <input type=\"text\" placeholder=\"Responsible Manager\" onChange = {(event) => setResponsibleManager(event.target.value)}></input>\r\n      <br></br>\r\n      <input type=\"text\" placeholder=\"File Type\" onChange = {(event) => setFileType(event.target.value)}></input>\r\n      <br></br>\r\n      <input type=\"text\" placeholder=\"File Description\" onChange = {(event) => setFileDescription(event.target.value)}></input>\r\n      <br></br>\r\n      \r\n      <FileUpload setUrl={setFileUrl} setIpfs={setIpfsHash} />\r\n      FileUrl :{\" \"}\r\n      <a href={fileUrl} target=\"_blank\" rel=\"noopener noreferrer\">\r\n        {fileUrl}\r\n      </a>\r\n      <br></br>\r\n\r\n      <p>Your account: {account}</p>\r\n      <br></br>\r\n\r\n      <button onClick={sendTransaction}>\r\n        트랜잭션 추가\r\n      </button>\r\n      {/* <button onClick={updateAllTransactions}>\r\n        트랜잭션 보여주기\r\n      </button> */}\r\n      <br></br>\r\n\r\n      <p>all transactions:</p>\r\n      <br></br>\r\n      <p>Category: {category_}</p>\r\n      <p>File Name: {name_}</p>\r\n      <p>Time: {time}</p>\r\n      <p>IPFS Hash: {ipfsHash_}</p>\r\n      <p>Registrant: {registrant_}</p>\r\n      <p>Responsible Manager: {responsibleManager_}</p>\r\n      <p>File Type: {fileType_}</p>\r\n      <p>File Description: {fileDescription_}</p>\r\n    </div>\r\n  )\r\n}\r\n\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById('root'));\r\nroot.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>\r\n);\r\n"],"sourceRoot":""}