[{"D:\\BlockchainSafetyManagement\\client\\src\\index.js":"1","D:\\BlockchainSafetyManagement\\client\\src\\App.jsx":"2","D:\\BlockchainSafetyManagement\\client\\src\\components\\FileUpload.js":"3","D:\\공프기\\Capstone test\\BlockchainSafetyManagement\\client\\src\\index.js":"4","D:\\공프기\\Capstone test\\BlockchainSafetyManagement\\client\\src\\App.jsx":"5","D:\\공프기\\Capstone test\\BlockchainSafetyManagement\\client\\src\\components\\FileUpload.js":"6"},{"size":265,"mtime":1657170204734,"results":"7","hashOfConfig":"8"},{"size":5618,"mtime":1657853639379,"results":"9","hashOfConfig":"8"},{"size":2843,"mtime":1657260466623,"results":"10","hashOfConfig":"8"},{"size":265,"mtime":1657859751252,"results":"11","hashOfConfig":"12"},{"size":5654,"mtime":1658117222298,"results":"13","hashOfConfig":"12"},{"size":2843,"mtime":1657859751238,"results":"14","hashOfConfig":"12"},{"filePath":"15","messages":"16","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"17"},"q0esf",{"filePath":"18","messages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"20","messages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"17"},{"filePath":"22","messages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"y07o7q",{"filePath":"24","messages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26"},{"filePath":"27","messages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\BlockchainSafetyManagement\\client\\src\\index.js",[],["29","30"],"D:\\BlockchainSafetyManagement\\client\\src\\App.jsx",["31","32","33","34","35"],"D:\\BlockchainSafetyManagement\\client\\src\\components\\FileUpload.js",[],"D:\\공프기\\Capstone test\\BlockchainSafetyManagement\\client\\src\\index.js",[],"D:\\공프기\\Capstone test\\BlockchainSafetyManagement\\client\\src\\App.jsx",["36","37","38","39"],"import React, { useEffect, useState } from \"react\";\r\nimport {FileUpload} from './components/FileUpload';\r\nimport \"./App.css\";\r\nimport TransactionContract from \"../src/contracts/Transaction.json\"\r\nimport Web3 from 'web3';\r\nimport moment from \"moment\";\r\n\r\n\r\nexport default function App() {\r\n  const [fileUrl, setFileUrl] = useState(\"\");\r\n  const [web3, setWeb3] = useState(\"\");\r\n  const [account, setAccount] = useState(\"\");\r\n  const [transactionInstance, setTransactionInstance] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const [category, setCategory] = useState(\"\");\r\n  const [name, setName] = useState(\"\");\r\n  const [ipfsHash, setIpfsHash] = useState(\"\");\r\n  const [registrant, setRegsitrant] = useState(\"\");\r\n  const [responsibleManager, setResponsibleManager] = useState(\"\");\r\n  const [fileType, setFileType] = useState(\"\");\r\n  const [fileDescription, setFileDescription] = useState(\"\");\r\n  const [transactionCnt, setTransactionCnt] = useState(\"\");\r\n\r\n  const [time, setTime] = useState(\"\");\r\n  const [ipfsHash_, setIpfsHash_] = useState(\"\");\r\n  const [category_, setCategory_] = useState(\"\");\r\n  const [name_, setName_] = useState(\"\");\r\n  const [registrant_, setRegsitrant_] = useState(\"\");\r\n  const [responsibleManager_, setResponsibleManager_] = useState(\"\");\r\n  const [fileType_, setFileType_] = useState(\"\");\r\n  const [fileDescription_, setFileDescription_] = useState(\"\");\r\n\r\n\r\n\r\n  \r\n\r\n  useEffect(() => {\r\n    async function componentWillMount(e) {\r\n      const web3 = new Web3(new Web3.providers.HttpProvider('http://ec2-54-180-152-10.ap-northeast-2.compute.amazonaws.com:3000'));\r\n      setWeb3(web3);\r\n      console.log(web3)\r\n      const contract = require(\"truffle-contract\");\r\n      const transaction = contract(TransactionContract);\r\n      console.log(web3);\r\n      transaction.setProvider(web3.currentProvider);\r\n  \r\n      web3.eth.getAccounts((error, accounts) => {\r\n        if (!error){\r\n          transaction.deployed().then(instance => {\r\n            setTransactionInstance(instance);\r\n            setAccount(accounts[0]);\r\n            setLoading(true);\r\n          })\r\n        }\r\n      })\r\n      \r\n    }\r\n\r\n    componentWillMount();\r\n    // setTimeout(() => {  console.log(\"World!\"); }, 1000);\r\n    // updateAllTransactions();\r\n\r\n    \r\n\r\n  }, []);\r\n\r\n\r\n  useEffect(() => {\r\n\r\n    async function updateAllTransactions(e){\r\n      let events = await transactionInstance.getPastEvents('handleTransaction', {fromBlock:0, toBlock:'latest'});\r\n      for(let i=0; i<events.length; i+=1){\r\n        const record = {};\r\n        var time_ = moment.unix(events[i].returnValues.time);\r\n\r\n        setCategory_(events[i].returnValues.category.toString());\r\n        setName_(events[i].returnValues.name.toString());\r\n        setTime(time_.toString());\r\n        setIpfsHash_(events[i].returnValues.ipfs_hash.toString());\r\n        setRegsitrant_(events[i].returnValues.registrant.toString());\r\n        setResponsibleManager_(events[i].returnValues.responsible_manager.toString());\r\n        setFileType_(events[i].returnValues.file_type.toString());\r\n        setFileDescription_(events[i].returnValues.file_description.toString());\r\n        setTransactionCnt(transactionInstance.cntTransactions());\r\n  \r\n      }\r\n      console.log(events.length);\r\n      console.log(events);\r\n  \r\n    }\r\n\r\n    if (loading == true) updateAllTransactions();\r\n\r\n}, [loading]);\r\n\r\n\r\n  const sendTransaction = async (e) => {\r\n    console.log(web3);\r\n    console.log(account);\r\n    console.log(transactionInstance);\r\n    await transactionInstance.sendTrans(category, name, ipfsHash, registrant, responsibleManager, fileType, fileDescription,{\r\n      from: account,\r\n      //value: e.web3.utils.toWei('10', \"ether\"),\r\n      gas: 1000000\r\n    })\r\n    \r\n    let events = await transactionInstance.getPastEvents('handleTransaction', {fromBlock: 0, toBlock:'latest'});\r\n    console.log(events[events.length-1].transactionHash)\r\n  }\r\n\r\n\r\n\r\n\r\n  return (\r\n    <div>\r\n      <input type=\"text\" placeholder=\"Type\" onChange = {(event) => setCategory(event.target.value)}></input>\r\n      <br></br>\r\n      <input type=\"text\" placeholder=\"Name\" onChange = {(event) => setName(event.target.value)}></input>\r\n      <br></br>\r\n      <input type=\"text\" placeholder=\"Registrant\" onChange = {(event) => setRegsitrant(event.target.value)}></input>\r\n      <br></br>\r\n      <input type=\"text\" placeholder=\"Responsible Manager\" onChange = {(event) => setResponsibleManager(event.target.value)}></input>\r\n      <br></br>\r\n      <input type=\"text\" placeholder=\"File Type\" onChange = {(event) => setFileType(event.target.value)}></input>\r\n      <br></br>\r\n      <input type=\"text\" placeholder=\"File Description\" onChange = {(event) => setFileDescription(event.target.value)}></input>\r\n      <br></br>\r\n      \r\n      <FileUpload setUrl={setFileUrl} setIpfs={setIpfsHash} />\r\n      FileUrl :{\" \"}\r\n      <a href={fileUrl} target=\"_blank\" rel=\"noopener noreferrer\">\r\n        {fileUrl}\r\n      </a>\r\n      <br></br>\r\n\r\n      <p>Your account: {account}</p>\r\n      <br></br>\r\n\r\n      <button onClick={sendTransaction}>\r\n        트랜잭션 추가\r\n      </button>\r\n      {/* <button onClick={updateAllTransactions}>\r\n        트랜잭션 보여주기\r\n      </button> */}\r\n      <br></br>\r\n\r\n      <p>all transactions:</p>\r\n      <br></br>\r\n      <p>Category: {category_}</p>\r\n      <p>File Name: {name_}</p>\r\n      <p>Time: {time}</p>\r\n      <p>IPFS Hash: {ipfsHash_}</p>\r\n      <p>Registrant: {registrant_}</p>\r\n      <p>Responsible Manager: {responsibleManager_}</p>\r\n      <p>File Type: {fileType_}</p>\r\n      <p>File Description: {fileDescription_}</p>\r\n    </div>\r\n  )\r\n}\r\n\r\n","D:\\공프기\\Capstone test\\BlockchainSafetyManagement\\client\\src\\components\\FileUpload.js",[],{"ruleId":"40","replacedBy":"41"},{"ruleId":"42","replacedBy":"43"},{"ruleId":"44","severity":1,"message":"45","line":11,"column":10,"nodeType":"46","messageId":"47","endLine":11,"endColumn":14},{"ruleId":"44","severity":1,"message":"48","line":23,"column":10,"nodeType":"46","messageId":"47","endLine":23,"endColumn":24},{"ruleId":"44","severity":1,"message":"49","line":74,"column":15,"nodeType":"46","messageId":"47","endLine":74,"endColumn":21},{"ruleId":"50","severity":1,"message":"51","line":93,"column":17,"nodeType":"52","messageId":"53","endLine":93,"endColumn":19},{"ruleId":"54","severity":1,"message":"55","line":95,"column":4,"nodeType":"56","endLine":95,"endColumn":13,"suggestions":"57"},{"ruleId":"44","severity":1,"message":"48","line":23,"column":10,"nodeType":"46","messageId":"47","endLine":23,"endColumn":24},{"ruleId":"44","severity":1,"message":"49","line":74,"column":15,"nodeType":"46","messageId":"47","endLine":74,"endColumn":21},{"ruleId":"50","severity":1,"message":"51","line":93,"column":17,"nodeType":"52","messageId":"53","endLine":93,"endColumn":19},{"ruleId":"54","severity":1,"message":"55","line":95,"column":4,"nodeType":"56","endLine":95,"endColumn":13,"suggestions":"58"},"no-native-reassign",["59"],"no-negated-in-lhs",["60"],"no-unused-vars","'web3' is assigned a value but never used.","Identifier","unusedVar","'transactionCnt' is assigned a value but never used.","'record' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'transactionInstance'. Either include it or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setTransactionCnt' needs the current value of 'transactionInstance'.","ArrayExpression",["61"],["62"],"no-global-assign","no-unsafe-negation",{"desc":"63","fix":"64"},{"desc":"63","fix":"65"},"Update the dependencies array to be: [loading, transactionInstance]",{"range":"66","text":"67"},{"range":"68","text":"67"},[3330,3339],"[loading, transactionInstance]",[3375,3384]]